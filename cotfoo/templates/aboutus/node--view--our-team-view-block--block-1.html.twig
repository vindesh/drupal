{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="" rel="bookmark"></a>
    </h2>
  {% endif %}
  {{ title_suffix }}	

  <div{{ content_attributes.addClass('content') }}>    
    <!-- End Our team Section -->
	<div class="">
             <div class="card-container">
                <div class="card">
                    <div class="front">
                        <div class="cover">
                            
                        </div>
                        {% set memberimage = file_url(content.field_image.0['#item'].entity.getFileUri()) %}
                        <div class="user">
                            <img class="img-circle" src="{{memberimage}}"/>
                        </div>
                        <div class="content">
                            <div class="main">
                                <h3 class="name">{{content.field_member_name}}</h3>
                                <div class="profession">{{content.field_designation}}</div>
                                   <div class="text-center">{{content.field_flip_box_title}}</div>
                               
                            </div>
                            <div class="footer">
                                <i class="fa fa-mail-forward"></i> Know more
                            </div>
                        </div>
                    </div> <!-- end front panel -->
                    <div class="back">
                        <div class="header">
                            <h5 class="motto">Know Our Team More</h5>
                        </div>
                        <div class="content">
                        <div class="main">
                                {#<h4 class="text-center">Job Description</h4>#}
                                <p class="text-center">{{content.field_about_you}}</p>
                        </div>
                        </div>
                        <div class="footer">
                            <div class="social-links text-center">
                                {% if node.field_facebook_url.0.url is not empty  %}  <a href="{{ node.field_facebook_url.0.url}}" class="facebook"><i class="fa fa-facebook fa-fw"></i></a> {% endif %}
                            {% if node.field_link.0.url is not empty  %}  <a href="{{ node.field_link.0.url }}" class="google"><i class="fa fa-linkedin fa-fw"></i></a> {% endif %}
                            {% if node.field_twitter_url.0.url is not empty  %}  <a href="{{ node.field_twitter_url.0.url}}" class="twitter"><i class="fa fa-twitter fa-fw"></i></a> {% endif %}
                            </div>
                        </div>
                           
                    </div> <!-- end back panel -->
                </div> <!-- end card -->
            </div> <!-- end card-container -->
		</div>
	<!-- End Our team Section -->
  </div>

</article>
