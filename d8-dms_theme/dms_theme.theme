<?php

use Drupal\Core\Link;
use Drupal\Core\Url;

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Language\LanguageInterface;


function dms_theme_preprocess_taxonomy_term(&$variables)
{
  $tid = $variables['elements']['#taxonomy_term']->tid->value;
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $manager = Drupal::service('forum_manager');
  $topics = $manager->getTopics($tid, $user)['topics'];
  $variables['topic_count'] = count($topics);
}

function dms_theme_preprocess_forum_list(&$variables) {
  $user = \Drupal::currentUser();
  $row = 0;
  // Sanitize each forum so that the template can safely print the data.
  foreach ($variables['forums'] as $id => $forum) {
    $variables['forums'][$id]->description = ['#markup' => $forum->description->value];
    $variables['forums'][$id]->link = forum_uri($forum);
    $variables['forums'][$id]->name = $forum->label();
    $variables['forums'][$id]->is_container = !empty($forum->forum_container->value);
    $variables['forums'][$id]->zebra = $row % 2 == 0 ? 'odd' : 'even';
    $row++;

    $variables['forums'][$id]->new_text = '';
    $variables['forums'][$id]->new_url = '';
    $variables['forums'][$id]->new_topics = 0;
    $variables['forums'][$id]->old_topics = $forum->num_topics;
    $variables['forums'][$id]->icon_class = 'default';
    $variables['forums'][$id]->icon_title = t('No new posts');
    if ($user->isAuthenticated()) {
      $variables['forums'][$id]->new_topics = \Drupal::service('forum_manager')->unreadTopics($forum->id(), $user->id());  
      if ($variables['forums'][$id]->new_topics) {
        $variables['forums'][$id]->new_text = \Drupal::translation()->formatPlural($variables['forums'][$id]->new_topics, '1 new post<span class="visually-hidden"> in forum %title</span>', '@count new posts<span class="visually-hidden"> in forum %title</span>', ['%title' => $variables['forums'][$id]->label()]);
        $variables['forums'][$id]->new_url = \Drupal::url('forum.page', ['taxonomy_term' => $forum->id()], ['fragment' => 'new']);
        $variables['forums'][$id]->icon_class = 'new';
        $variables['forums'][$id]->icon_title = t('New posts');
      }
      $variables['forums'][$id]->old_topics = $forum->num_topics - $variables['forums'][$id]->new_topics;
    }
	  $curr_langcode = \Drupal::languageManager()->getCurrentLanguage(\Drupal\Core\Language\LanguageInterface::TYPE_CONTENT)->getId();
      $taxonomy_term = \Drupal\taxonomy\Entity\Term::load($forum->id());
      $taxonomy_term_trans = \Drupal::service('entity.repository')->getTranslationFromContext($taxonomy_term, $curr_langcode);
      $translated_term = $taxonomy_term_trans->getName();
	  $variables['forums'][$id]->term_title = $translated_term;
	
    $forum_submitted = ['#theme' => 'forum_submitted', '#topic' => $forum->last_post];
    $variables['forums'][$id]->last_reply = drupal_render($forum_submitted);
  }

  $variables['pager'] = [
   '#type' => 'pager',
  ];

  // Give meaning to $tid for themers. $tid actually stands for term ID.
  $variables['forum_id'] = $variables['tid'];
  unset($variables['tid']);

}


function dms_theme_preprocess_forums(&$variables)
{
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $language =  \Drupal::languageManager()->getCurrentLanguage()->getId();
  $manager = Drupal::service('forum_manager');
  $viewmanager = Drupal::service('nodeviewcount.records_manager');
  $topics = $manager->getTopics($variables['tid'], $user)['topics'];
  if ($variables['term'] && empty($variables['term']->forum_container->value) && !empty($variables['topics'])) {
    
      $table = [
        '#theme' => 'table__forum_topic_list',
        '#responsive' => false,
        '#attributes' => ['id' => 'forum-topic-' . $variables['tid'],'class'=>['forum-category-detail']],
        '#header' => [t('Forum Topic'), t('FCategory'), t('FReplies'), t('Forum Views'),t('FActivity')],
        '#rows' => [],
      ];
  
      foreach ($topics as $id => $topic) {
        $topic_author = \Drupal\user\Entity\User::load($topic->uid->target_id);
        $style = \Drupal::entityTypeManager()->getStorage('image_style')->load('user_picture');
        // Build table rows from topics.
        $row = [];
		
		
		$options = ['absolute' => TRUE];
        $url_object = \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $id], $options);
		//$url_object = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'. $nid, $language);
        //$topic->title_link

		$topiclink = Link::fromTextAndUrl($topic->getTitle(), $url_object )->toString();

        if(isset($topic_author->get('user_picture')->target_id)){
          $file = \Drupal\file\Entity\File::load($topic_author->get('user_picture')->target_id);
          $url = $style->buildUrl($file->getFileUri());
          $markup = '<div class="forum-title-wrapper"><div class="author-dp">
                    <img src="' . $url . '"/>
                  </div><div class="forum__title">
                    <div>' . $topiclink . '</div>
                  </div></div>';
        }else{
          $markup = '<div class="forum-title-wrapper"><div class="author-dp">
                  </div><div class="forum__title">
                    <div>' . $topiclink . '</div>
                  </div></div>';
        }
        $row[] = [
            'data' => [
              [
                '#markup' => $markup,
              ],
            ],
            'class' => ['forum__topic'],
          ];
         // $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($topic->forum_tid);
		  //$translated_term = \Drupal::service('entity.repository')->getTranslationFromContext$term, $language);
           $curr_langcode = \Drupal::languageManager()->getCurrentLanguage(\Drupal\Core\Language\LanguageInterface::TYPE_CONTENT)->getId();
           $taxonomy_term = \Drupal\taxonomy\Entity\Term::load($topic->forum_tid);
           $taxonomy_term_trans = \Drupal::service('entity.repository')->getTranslationFromContext($taxonomy_term, $curr_langcode);
           $translated_term = $taxonomy_term_trans->getName();

		  
		  
          $row[] = [
            'data' => [
              [
                '#markup' => '<div class="category-wrapper">'.$translated_term.'</div>',
              ],
            ],
            'class' => ['forum__category'],
          ];

          if ($topic->moved) {
              $row[] = [
            'data' => $topic->message,
            'colspan' => '2',
          ];
          } else {
              $new_replies = '';

              if ($topic->new_replies) {
                  $new_replies = '<br /><a href="' . $topic->new_url . '">' . $topic->new_text . '</a>';
              }

              $row[] = [
                'data' => [
                  [
                    '#prefix' => $topic->comment_count,
                    '#markup' => $new_replies,
                  ],
                ],
                'class' => ['forum__replies'],
              ];

              $row[] = [
                'data' => $viewmanager->getNodeViewsCount($topic)[0]->expression,
                'class' => ['forum__views'],
              ];
              $forum_submitted = [
                '#theme' => 'forum_submitted',
                '#topic' => isset($topic->last_reply) ? $topic->last_reply : null,
              ];
              $row[] = [
              'data' => \Drupal::service('renderer')->render($forum_submitted),
              'class' => ['forum__last-reply'],
            ];
          }
          $table['#rows'][] = $row;
      }
      $variables['topics'] = $table;
  }
}
  /**
 * Override of theme_menu_local_action()
 *
 * @see theme_menu_local_action()
 */
function dms_theme_menu_local_action(&$variables) {
  // We want to remove the 'add forum topic if we are on the
  // forum top page, so users can only add forum topics from
  // within a forum. This prevents users from having to guess at
  // the forum which is best suited to the topic they are creating.
  // By forcing them to go to a forum, they will be more likely to
  // read the forum descriptions, thereby posting in the correct forum.

  // We only want to remove the 'Add forum topic' link if we are not
  // in a forum.
  //dpm($variables);
}
/**
 * Implements hook_preprocess_page_title().
 */
function dms_theme_preprocess_page_title(&$variables)
{

  $route_name = \Drupal::routeMatch()->getRouteName();

  if ($route_name == 'forum.index') {
    $variables['title'] = t('Forum Categories');
  }
}


/**
 * @file
 * Theme specific functionality.
 */

// @import => link but only for dev (browsersync among other tools)
// Cannot be executed on production or CSS aggregation does not kick in!
function dms_theme_css_alter(&$vars) {
  if (\Drupal::service('module_handler')->moduleExists('dms_environment')) {
    if (\Drupal::service('dms_environment.service')->getCurrent() == 'development') {
      foreach ($vars as $key => $val) {
        $vars[$key]['preprocess'] = FALSE;
      }
    } else {
      foreach ($vars as $key => $val) {
        $vars[$key]['preprocess'] = TRUE;
      }
    }
  } else {
    foreach ($vars as $key => $val) {
      $vars[$key]['preprocess'] = TRUE;
    }
  }
}


// Preprocessing functions split up per type.
include 'theme-functions/preprocess-html.php';
include 'theme-functions/preprocess-page.php';
include 'theme-functions/preprocess-region.php';
include 'theme-functions/preprocess-views.php';
include 'theme-functions/preprocess-node.php';
include 'theme-functions/preprocess-user.php';
include 'theme-functions/preprocess-block.php';
include 'theme-functions/preprocess-field.php';
include 'theme-functions/preprocess-paragraph.php';
include 'theme-functions/preprocess-facets.php';
include 'theme-functions/preprocess-comment.php';

// Commerce
include 'theme-functions/preprocess-commerce.php';

// Altering
include 'theme-functions/alter-form.php';

// Theme hooks
include 'theme-functions/theme-hook-suggestions.php';
