{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{{ content.field_main_layout }}
{% set width_column = content.view_events_landing.filter_region is not empty ? 'uk-width-1-3@m' : 'uk-width-1-2@s' %}
<div class="uk-section-default" id="main-content">
  <div class="uk-container uk-padding uk-padding-remove-horizontal">    
    <div class="uk-section uk-grid uk-grid-small" uk-grid>
      <div class="uk-width-2-3@m" uk-filter="target: .ukg-listing-container" data-module="newsroomFilters">
        <h2 class="ukg-content-title uk-margin-bottom">{{ 'Upcoming Events'|t }}</h2>

        {# commenting out until these are fully functioning #}
        {# <div class="uk-flex uk-grid-small ukg-filter-container">        
          {% if content.view_events_landing.filter_type is not empty %}
            <div class="ukg-dropdown ukg-dropdown-filter {{ width_column }}">
              {{ content.view_events_landing.filter_type }}
            </div>
          {% endif %}
          {% if content.view_events_landing.filter_location is not empty %}
            <div class="ukg-dropdown ukg-dropdown-filter {{ width_column }}">
              {{ content.view_events_landing.filter_location }}
            </div>
          {% endif %}
          {% if content.view_events_landing.filter_region is not empty %}
            <div class="ukg-dropdown ukg-dropdown-filter {{ width_column }}">
              {{ content.view_events_landing.filter_region }}
            </div>
          {% endif %}
        </div> #}
        <div class="ukg-filter-label-container uk-animation-scale-up uk-animation-fast" hidden>
          <h3>{{ 'You are currently viewing events in...'|t }}</h3>
          <div class="ukg-filter-labels">
            <a uk-filter-control="filter: [data-type]; group: type"
               class="filterLabel filter-type uk-button uk-button-secondary uk-button-small" href="#" hidden>all
              types</a></li>
            <a uk-filter-control="filter: [data-location]; group: location"
               class="filterLabel filter-location uk-button uk-button-secondary uk-button-small" href="#" hidden>all locations</a>
            <a uk-filter-control="filter: [data-region]; group: region"
               class="filterLabel filter-region uk-button uk-button-secondary uk-button-small" href="#" hidden>all
              regions</a>
          </div>
          <div class="ukg-filter-clear-all">
            <a class="ukg-cta-inline ukg-cta-primary ukg-cta-small" uk-filter-control>{{ 'Clear All Filters'|t }}</a>
          </div>
        </div>
        <div class="ukg-filter-no-results-container" hidden>
          {{ content.field_block_no_result }}
        </div>
        <div class="ukg-main-content">
          {{ content.view_events_landing.event }}
          <div class="ukg-view-load-more" uk-scrollspy="repeat: true; offset-top: -200; hidden: false"
               data-current-page="0"><span>{{ 'loading more'|t }}</span></div>
          <div class="uk-pagination ukg-view-pagination">
            <a id="js-scroll-trigger" uk-invisible></a>
          </div>
        </div>
      </div>
      <div class="uk-width-1-3@m">
        <aside class="ukg-sidebar ukg-sidebar-primary">
          {{ content.field_sidebar_canvas }}
        </aside>
      </div>
    </div>
  </div>
</div>

