{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}

{% set start_date = content.field_event_date_start.0['#markup']|date('l, F j, Y') %}
{% set end_date = content.field_event_date_end.0['#markup']|date('l, F j, Y') %}
{% if start_date == end_date %}
  {% set event_time = start_date ~ '<br />' ~ start_time ~ ' - ' ~ end_time ~ ' ' ~ timezone_abbreviation %}
{% else %}
  {% set event_time = start_date ~ ' - ' ~ end_date %}
{% endif %}


<div class="uk-section-default" id="main-content">
  <div class="uk-container">
    {% set location = node.field_node_text_news_location is not empty ? content.field_node_text_news_location.0['#context']['value'] : '' %}
    {% set date = node.field_date_news_publication is not empty ? content.field_date_news_publication.0['#text'] : '' %}
    {% set separator = location and date ? ', ' : '' %}
    {% set introduction = date ~ separator ~ location %}
    <h5 class="introduction"><strong>{{ introduction }}</strong></h5>
    <h1 class="ukg-content-title">{{ content.event_title }}</h1>
    {% if node.field_node_subtitle_html is not empty %}
      <div><h3 class="ukg-event-subtitle">{{ content.field_node_subtitle_html }}</h3></div>
    {% endif %}    
    <div class="uk-section uk-grid uk-grid-medium" uk-grid>
      <div class="uk-width-3-5@m uk-width-2-3@l">
        <div class="ukg-main-content uk-section">
          <div class="ukg-hero-content uk-grid" uk-grid>
          {% if node.field_node_image_hero is not empty %}
            <div class="image-wrapper uk-width-1-2@s uk-width-2-5@m uk-width-1-3@l">
              {{ content.field_node_image_hero }}
            </div>
          {% endif %}
            <div class="uk-flex uk-flex-wrap uk-flex-middle uk-width-1-2@s uk-width-3-5@m uk-width-2-3@l">
              <div class="ukg-event-date uk-width-1-1">
                <h4>{{ event_time|raw }}</h4>                
              </div>
              {{ content.field_node_taxonomy_event_type }}              
            </div>       
            <p>{{ content.field_event_hero_caption }}</p>

        </div>
          <div class="ukg-content-body">
          <hr />
            {# {{ content.field_main_layout }} -- Remove due to the incompatibility of webform submission #}
            {% embed directory ~ '/app/includes/2_pieces/block-wysiwyg.twig' with {wysiwyg: content.field_node_body} %}
            {% endembed %}
          </div>
          <div class="ukg-share-this uk-padding-small uk-padding-remove-left ukg-event-share">
            <p><strong>{{ 'Share this event:'|t }}</strong></p>
            {{ content.addtoany_block }}      
          </div>          
    
          {% if display_submitted %}
            <footer>
              {{ author_picture }}
              <div{{ author_attributes }}>
                {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
                {{ metadata }}
              </div>
            </footer>
          {% endif %}
        </div>
      </div>
      <div class="uk-width-1-2@s uk-width-2-5@m uk-width-1-3@l">
        <aside class="ukg-sidebar ukg-sidebar-primary ukg-sidebar-form" id="sidebar">
          <div class="ukg-card-form">
            <div class="uk-card">
              {{ content.webform }}
            </div>
          </div>
          <div class="ukg-sidebar-form-response" data-module="formCallback" hidden>
            {{ content.field_node_html_thankyou }}
            <div class="ukg-sidebar-section ukg-share-this uk-padding-small uk-padding-remove-left">
              <h3>{{ 'Save This Event'|t }}</h3>
              
            </div>
          </div>
        </aside>
      </div>
    </div>
  </div>
</div>
